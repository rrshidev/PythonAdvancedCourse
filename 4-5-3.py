"""
–û–±–º–µ–Ω —Å—Ç–æ–ª–±—Ü–æ–≤

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç –º–µ—Å—Ç–∞–º–∏ —Å—Ç–æ–ª–±—Ü—ã –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ nnn –∏ mmm ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ,
–∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã –ø–æ—Å—Ç—Ä–æ—á–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∑–∞—Ç–µ–º —á–∏—Å–ª–∞ iii –∏ jjj ‚Äî –Ω–æ–º–µ—Ä–∞ —Å—Ç–æ–ª–±—Ü–æ–≤, –ø–æ–¥–ª–µ–∂–∞—â–∏—Ö –æ–±–º–µ–Ω—É.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Å –∑–∞–º–µ–Ω–µ–Ω–Ω—ã–º–∏ —Å—Ç–æ–ª–±—Ü–∞–º–∏.
–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢

Sample Input 1:

3
4
11 12 13 14
21 22 23 24
31 32 33 34
0 1

Sample Output 1:

12 11 13 14
22 21 23 24
32 31 33 34
"""


def cols_changer(size_n, size_m):
    # Matrix burn
    matrix = []
    for strings in range(size_n):
        nums = [int(num) for num in input().split()]
        matrix.append(nums)
    # matrix flip
    m_flip = []
    for col in range(size_m):
        flip_nums = []
        for row in range(size_n):
            flip_nums.append(matrix[row][col])
        m_flip.append(flip_nums)
    # matrix change
    str_n = input().split(' ')
    n_col_1, n_col_2 = int(str_n[0]), int(str_n[1])
    if n_col_1 < n_col_2:
        m_flip[n_col_1], m_flip[n_col_2] = m_flip[n_col_2], m_flip[n_col_1]
    else:
        m_flip[n_col_2], m_flip[n_col_1] = m_flip[n_col_1], m_flip[n_col_2]
    # matrix back-flip & output
    for col in range(size_n):
        result = []
        for row in range(size_m):
            result.append(m_flip[row][col])
        print(*result)


size_n, size_m = int(input()), int(input())
cols_changer(size_n, size_m)
